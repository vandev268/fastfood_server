// 1. @default -> Sets a default value for the field. Not nullable.
// 2. Type? -> Indicates that the field is optional (nullable).
// -> Only use 1 or 2, not both.

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  email       String    @db.VarChar(500)
  password    String    @db.VarChar(500)
  name        String    @db.VarChar(500) @default("")
  phoneNumber String    @db.VarChar(50) @default("")
  avatar      String?   @db.VarChar(1000)
  dateOfBirth DateTime?
  totpSecret  String?   @db.VarChar(1000)
  status      UserStatus @default(Active)
  roleId                      Int
  role                        Role                  @relation(fields: [roleId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  refreshTokens               RefreshToken[]

  deletedAt DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  
  @@index([deletedAt])
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @db.VarChar(1000) @unique
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@index([expiresAt])
}

model VerificationCode {
  id    Int                  @id @default(autoincrement())
  email String               @db.VarChar(500)
  code  String               @db.VarChar(50)
  type  VerificationCodeType
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@unique([email, type])
  @@index([expiresAt])
}

model Role {
  id          Int          @id @default(autoincrement())
  name        String       @db.VarChar(500)
  description String       @default("")
  isActive    Boolean      @default(true)
  permissions Permission[]
  users       User[]

  deletedAt DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([deletedAt])
}

model Permission {
  id          Int        @id @default(autoincrement())
  name        String     @db.VarChar(500)
  description String     @default("")
  path        String     @db.VarChar(1000)
  method      HTTPMethod
  module      String     @db.VarChar(500) @default("")
  roles       Role[]

  deletedAt DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([deletedAt])
}

enum UserStatus {
  Active
  Inactive
  Blocked
}

enum VerificationCodeType {
  Register
  ForgotPassword
  Login2FA
  Disable2FA
}

enum HTTPMethod {
  GET
  POST
  PUT
  DELETE
  PATCH
  OPTIONS
  HEAD
}